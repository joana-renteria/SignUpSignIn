@startuml
left to right direction
skinparam linetype ortho

package Server {
	class ApplicationServer {
		public void main()
	}
	
	class ServerThread {
		public void login(User user) throws UserDoesNotExistException, IncorrectUserException, IncorrectPasswordException
		public void signUp(User user) throws EmailExistsException, UserAlreadyExistsException
	}
	
	abstract UserFactoryServer {
		
	}
	
	class Pool {
		
	}
	
	class DAOServer {
		public User login(String username) throws UserDoesNotExistException, IncorrectUserException, IncorrectPasswordException
		public void signUp(User user) throws EmailExistsException, UserAlreadyExistsException
	}
	
	class MasterConnection {
		public void openConnection()
		public void closeConnection()
	}

	class Server.Socket{}
	class Server.InputStream{}
	class Server.OutputStream{}
}

package Client {
	class JavaFX {
		
	}

	class ApplicationClient {
		public void main()
	}

	class LoginController {
		public void login() throws IncorrectPasswordException, UserDoesNotExistException, IncorrectUserException, TimeOutException
	}
	
	class SignUpController {
		public void signUp(User user) throws IncorrectPasswordException, UserAlreadyExistsException, TimeOutException, EmailAlreadyExistsException
	}
	
	class ApplicationWindowController {
		public void logout()
	}
	
	class UserImplementation {
		public User login(String username) throws ServerException
		public void signUp(User user) throws IncorrectPasswordException, TimeOutException, UserAlreadyExistsException, EmailAlreadyExistsException
	}
	
	abstract UserFactoryClient {
		
	}

	class Client.Socket{}
	class Client.InputStream{}
	class Client.OutputStream{}
}

package DataBase <<Database>> {
	
}

package Lib {
	enum Action {
		LOGIN
		REGISTER
	}
	
	class Package {
		User user
		Action action
		Message message
	}

	interface Userable {
		public User login(String username) throws ServerException, IncorrectPasswordException, UserDoesNotExistException, IncorrectUserException, TimeOutException
		public void signUp(User user) throws ServerException, IncorrectPasswordException, TimeOutException, UserAlreadyExistsException, EmailAlreadyExistsException
	}
	
	class User {
		Integer id
		String login
		String email
		String fullName
		UserStatus status
		UserPrivilege privilege
		String password
		Timestamp lastPasswordChange
	}
	
	enum UserStatus {
		ENABLED
		DISABLED
	}
	
	enum UserPrivilege {
		USER
		ADMIN
	}
	
	enum Message {
		OK
		SERVERERROR
		TIMEOUT
		USERALREADYEXISTS
		EMAILALREADYEXISTS
		INCORRECTPASSWORD
		USERDOESNOTEXISTS
	}

}

package Exceptions {
	class ServerException{}
	class UserDoesNotExistException{}
	class IncorrectPasswordException{}
	class TimeOutException{}
	class UserAlreadyExistsException{}
	class IncorrectUserException{}
	class EmailAlreadyExistsException{}
}

UserImplementation --> Package

Package --> Action
Package --> Message

Userable <-- LoginController
Userable <-- SignUpController
Userable <-- ApplicationWindowController

Userable <|.. UserImplementation

Pool <-- DAOServer
DAOServer --> MasterConnection
MasterConnection --> DataBase
UserFactoryServer <-- ServerThread
UserFactoryServer --> DAOServer
DAOServer ..|> Userable
ServerThread --> Userable
ServerThread --> Package
ApplicationServer --> ServerThread

ApplicationClient --> ApplicationWindowController
ApplicationClient --> SignUpController
ApplicationClient --> LoginController

ApplicationWindowController -- SignUpController
SignUpController -- LoginController

UserFactoryClient <-- UserImplementation
UserFactoryClient --> ApplicationClient

ApplicationClient --|> JavaFX

Server.Socket --> 		ServerThread
Server.ServerSocket --> ServerThread
Server.InputStream --> 	ServerThread
Server.OutputStream -->	ServerThread

Client.Socket --> UserImplementation
Client.InputStream --> UserImplementation
Client.OutputStream --> UserImplementation

ServerException <-- DAOServer
TimeOutException <-- UserImplementation
UserAlreadyExistsException <-- SignUpController
EmailAlreadyExistsException <-- SignUpController
UserDoesNotExistException <-- LoginController
IncorrectUserException <-- LoginController
IncorrectPasswordException <-- LoginController
IncorrectUserException <-- SignUpController

Package --> User
User --> UserPrivilege
User --> UserStatus

@enduml
